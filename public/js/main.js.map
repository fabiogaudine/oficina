{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/comment/comment.component.css","webpack:///./src/app/comment/comment.component.html","webpack:///./src/app/comment/comment.component.ts","webpack:///./src/app/comment/comment.service.ts","webpack:///./src/app/film/film.component.css","webpack:///./src/app/film/film.component.html","webpack:///./src/app/film/film.component.ts","webpack:///./src/app/film/film.service.ts","webpack:///./src/app/genre/genre.component.css","webpack:///./src/app/genre/genre.component.html","webpack:///./src/app/genre/genre.component.ts","webpack:///./src/app/genre/genre.service.ts","webpack:///./src/app/genre/genre.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<mat-toolbar color=\\\"primary\\\">\\n  <span>Projeto: Laravel + Angular</span>\\n</mat-toolbar>\\n\\n<mat-divider></mat-divider>\\n\\n\\n<app-genre></app-genre>\\n<app-film></app-film>\\n<app-comment></app-comment>\\n\\n<button mat-fab color=\\\"primary\\\" class=\\\"float-button\\\" (click)=\\\"openDialog()\\\">\\n  <mat-icon>add</mat-icon>\\n</button>\\n\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css'],\n})\nexport class AppComponent {\n  title = 'appang';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\nimport { FlexLayoutModule } from \"@angular/flex-layout\";\nimport {MatCardModule} from '@angular/material/card';\nimport {MatButtonModule } from '@angular/material';\nimport {MatInputModule} from '@angular/material/input';\nimport {MatSelectModule} from '@angular/material/select';\nimport {MatIconModule} from '@angular/material/icon';\nimport {MatDividerModule} from '@angular/material/divider';\nimport {MatChipsModule} from '@angular/material/chips';\nimport {MatToolbarModule} from '@angular/material/toolbar';\nimport {MatDialogModule} from '@angular/material/dialog';\nimport {MatBadgeModule} from '@angular/material/badge';\n\nimport { AppComponent } from './app.component';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { GenreComponent } from './genre/genre.component';\nimport { FilmComponent } from './film/film.component';\nimport { CommentComponent } from './comment/comment.component';\n\nimport { GenreService } from './genre/genre.service';\nimport { FilmService } from './film/film.service';\nimport { CommentService } from './comment/comment.service';\n\nimport {APP_BASE_HREF} from '@angular/common';\nimport { AppRoutingModule } from './app-routing.module';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    FilmComponent,\n    GenreComponent,\n    CommentComponent,\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    FormsModule, \n    ReactiveFormsModule,\n    FlexLayoutModule,\n    HttpClientModule,\n\n    MatButtonModule,\n    MatInputModule,\n    MatSelectModule,\n    MatIconModule,\n    MatToolbarModule,\n    MatCardModule,\n    MatDividerModule,\n    MatDialogModule,\n    MatChipsModule,\n    MatBadgeModule,\n    AppRoutingModule\n  ],\n  providers: [\n    GenreService,\n    FilmService,\n    CommentService,\n    [{provide: APP_BASE_HREF, useValue: '/appang/app'}]\n  ],\n  \n  entryComponents : [\n  ], \n  \n  bootstrap: [AppComponent]\n})\nexport class AppModule { }","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbW1lbnQvY29tbWVudC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<p>\\n  comment works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-comment',\n  templateUrl: './comment.component.html',\n  styleUrls: ['./comment.component.css']\n})\nexport class CommentComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable()\n\nexport class CommentService {\n\n  constructor() { }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2ZpbG0vZmlsbS5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<p>\\n  film works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-film',\n  templateUrl: './film.component.html',\n  styleUrls: ['./film.component.css']\n})\nexport class FilmComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable()\n\nexport class FilmService {\n\n  constructor() { }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2dlbnJlL2dlbnJlLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<mat-divider></mat-divider>\\n\\n<p>teste</p>\\n\\n<p *ngFor=\\\"let g of genres\\\">\\n    {{g.id}} - {{g.name}}\\n</p>\\n\\n\\n\"","import { Component, OnInit } from '@angular/core';\nimport { GenreService } from './genre.service';\nimport { Genre } from './genre';\n\n@Component({\n  selector: 'app-genre',\n  templateUrl: './genre.component.html',\n  styleUrls: ['./genre.component.css']\n})\nexport class GenreComponent implements OnInit {\n\n  //private genre: Genre[];\n\n  public genres: Genre[] = [];\n\n  constructor(public genreService: GenreService) { }\n\n  ngOnInit() {\n    this.genres = this.genreService.genres;\n    console.log(this.genreService.genres);\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { Genre } from './genre';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable()\n\nexport class GenreService {\n\n  public genres: Genre[] = [];\n\n  constructor(private http: HttpClient) {\n    console.log(this.http.get(\"http://localhost:8001/api/genre/\"));\n\n    this.http.get(\"http://localhost:8001/api/genre/\").subscribe(\n      (vetor: any[]) => {    \n        for(let i of vetor){\n            this.genres.push(\n                new Genre(i.id, i.nome)\n            );\n          }\n        }\n      )\n    }\n}\n","export class Genre {\n\n    constructor(\n        public id: Number,\n        public name: String\n    ){}\n}","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}